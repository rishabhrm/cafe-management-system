<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UBKDCgKDCgJQYgxBIJB//9k=
</value>
  </data>
</root>